---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/5/13 10:59
---
local HP_pb = require("HP_pb")
local HeadIcon_pb = require("HeadIcon_pb")
local ChangePlayerIconPage = { }

local thisPageName = "ChangePlayerIconPage"
local option = {
    ccbiFile = "ChangePlayerIconPopUp.ccbi",
    handlerMap = {
        onClose = "onClose" ,
        onAvatar = "onAvatar",
        onFrame = "onFrame",
        onChange = "onChange",
    },
    opcodes = {
        MAINROLE_ICON_CHANGE_C = HP_pb.MAINROLE_ICON_CHANGE_C,
        MAINROLE_ICON_CHANGE_S = HP_pb.MAINROLE_ICON_CHANGE_S,
    },
}
local PAGE_TYPE = {
    AVATAR = 1,
    FRAME = 2,
}
local ROW_COUNT = 4
local IllItemContent = {
    ccbiFile = "FormationTeamContent.ccbi"
}
local curSubPage = PAGE_TYPE.AVATAR
local btn1 = nil
local btn2 = nil
local changePageTemp = nil
local WaitRefreshList = { }
local itemList = { }
local sortTab = { }
local roleTab = { }
----
local nowHeadNode = nil
local nowPlayerIcon = 0
local useableHero = { }
local CFG_ID_DATA = {
    BASE_HERO_RATIO = 1000,
}

function ChangePlayerIconPage:onEnter(container)
    container:registerMessage(MSG_MAINFRAME_REFRESH)
    self:registerPacket(container)
    self:initData(container)
    self:initUI(container)
    WaitRefreshList = { }
    self:SetBtnMenu(container, curSubPage)
end

function ChangePlayerIconPage_SetCurPageType(index)
    curSubPage = index
end

function ChangePlayerIconPage:SendPlayerIconInfo()
    local msg = HeadIcon_pb.PlayerHeadIconInfoReq()
    common:sendPacket(HP_pb.MAINROLE_ICON_INFO_C, msg, false)
end

function ChangePlayerIconPage:SendPlayerIconBuy(headIconId)
    local msg = HeadIcon_pb.PlayerHeadIconBuyReq()
    msg.headIconId = headIconId
    common:sendPacket(HP_pb.MAINROLE_ICON_BUY_C, msg, false)
end

function ChangePlayerIconPage:SendPlayerIconChange(headIconId)
    local msg = HeadIcon_pb.PlayerHeadIconChangeReq()
    msg.headIconId = headIconId
    common:sendPacket(HP_pb.MAINROLE_ICON_CHANGE_C, msg, false)
end

function ChangePlayerIconPage:registerPacket(container)
    for key, opcode in pairs(option.opcodes) do
        if string.sub(key, -1) == "S" then
            container:registerPacket(opcode)
        end
    end
end

function ChangePlayerIconPage:removePacket(container)
    for key, opcode in pairs(option.opcodes) do
        if string.sub(key, -1) == "S" then
            container:removePacket(opcode)
        end
    end
end

function ChangePlayerIconPage:initData(container)
    UserInfo.syncPlayerInfo()
    WaitRefreshList = { }
    itemList = { }
    sortTab = { }
    roleTab = { }
    useableHero = { }
    nowHeadNode = nil
    nowPlayerIcon = GameConfig.headIconNew or UserInfo.playerInfo.headIcon
    local UserMercenaryManager = require("UserMercenaryManager")
    local mercenaryInfos = UserMercenaryManager:getUserMercenaryInfos()
    for i, v in pairs(mercenaryInfos) do
        if v.stageLevel > 0 then
            table.insert(useableHero, v.itemId * CFG_ID_DATA.BASE_HERO_RATIO, true)
            for idx = 1, #v.ownSkin do
                table.insert(useableHero, v.itemId * CFG_ID_DATA.BASE_HERO_RATIO + v.ownSkin[idx], true)    
            end
        end
    end

    curSubPage = curSubPage or PAGE_TYPE.AVATAR
    local roleIcon = ConfigManager.getRoleIconCfg()

    for i, v in pairs(roleIcon) do
        if v.type == 2 then
            if v.isShow == 1 then
                if useableHero[v.id] ~= nil then
                    v.isActivity = 1
                else
                    v.isActivity = 0
                end
                table.insert(roleTab, v.id, v)
            end
        else
            if v.isShow == 1 then
                v.isActivity = 1
                table.insert(roleTab, v.id, v)
            end
        end
    end
end

function ChangePlayerIconPage:initUI(container)
    btn1 = container:getVarMenuItem("mAvatar")
    btn2 = container:getVarMenuItem("mFrame")
    btn2:setEnabled(false)
    local lbStr = {
        myContentTitle = common:getLanguageString("@HeadChangeTitle"),
    }
    NodeHelper:setStringForLabel(container, lbStr)
    NodeHelper:initScrollView(container, "mContent", 30)
end

function ChangePlayerIconPage:onAvatar(container)
    if curSubPage == PAGE_TYPE.AVATAR then
        btn1:selected()
        return
    end
    self:SetBtnMenu(container, PAGE_TYPE.AVATAR)
end

function ChangePlayerIconPage:onFrame(container)
    MessageBoxPage:Msg_Box(common:getLanguageString("@SevenDayQuestDay2Desc"))
    return
    --if curSubPage == PAGE_TYPE.FRAME then
    --    btn2:selected()
    --    return
    --end
    --return
    --self:SetBtnMenu(container, PAGE_TYPE.FRAME)
end

function ChangePlayerIconPage:onChange(container)
    if curSubPage == PAGE_TYPE.AVATAR then
        local nowIcon = GameConfig.headIconNew or UserInfo.playerInfo.headIcon
        if nowPlayerIcon == nowIcon then
            return
        end
        self:SendPlayerIconChange(nowPlayerIcon)
    end
end

function ChangePlayerIconPage:SetBtnMenu(container, index, needRefresh)
    needRefresh = needRefresh or false
    if btn1 ~= nil and btn2 ~= nil then
        if index == PAGE_TYPE.AVATAR then
            curSubPage = PAGE_TYPE.AVATAR
            btn1:selected()
            btn2:unselected()
        elseif index == PAGE_TYPE.FRAME then
            curSubPage = PAGE_TYPE.FRAME
            btn1:unselected()
            btn2:selected()
        else
            curSubPage = PAGE_TYPE.AVATAR
            btn1:selected()
            btn2:unselected()
        end
        NodeHelper:setNodesVisible(container, { mAvatarImgOn = (index == PAGE_TYPE.AVATAR), mFrameImgOn = (index == PAGE_TYPE.FRAME) })
        self:DataSort()
        self:refreshPage(container, true)
    end
end

function ChangePlayerIconPage:DataSort()
    local num = 1
    for k, v in pairs(roleTab) do
        if v.isActivity == 1 then
            sortTab[num] = v
            num = num + 1
        end
    end
    table.sort(sortTab, function(v1, v2)
        if v1.isActivity == 1 and v2.isActivity == 1 then
            return v1.order < v2.order
        end
        return false
    end)
end

function ChangePlayerIconPage:refreshPage(container, needRefresh)
    if needRefresh then
        changePageTemp = function()
            self:clearAndReBuildAllItem(container)
        end
    end
end

function ChangePlayerIconPage:clearAndReBuildAllItem(container)
    container.mScrollView:removeAllCell()
    WaitRefreshList = { }
    itemList = { }
    local lineCount = 0
    local tmpData = { }
    local UserMercenaryManager = require("UserMercenaryManager")
    local roleInfos = UserMercenaryManager:getMercenaryStatusInfos()
    local idx = 1
    if curSubPage == PAGE_TYPE.AVATAR then
        for k, v in pairs(roleTab) do
            if v.isActivity > 0 then
                tmpData[idx] = v
                idx = idx + 1
            end
        end
        lineCount = math.ceil((#tmpData + 1) / ROW_COUNT)
    end
    local nowLine = lineCount
    local headIndex = 1
    ----
    for i = lineCount, 1, -1 do
        for j = 1, ROW_COUNT, 1 do 
            local nowData = sortTab[headIndex]
            if nowData then
                local cell = CCBFileCell:create()
                cell:setCCBFile(IllItemContent.ccbiFile)
                local panel = common:new({ data = nowData, index = headIndex }, IllItemContent)
                cell:registerFunctionHandler(panel)
                container.mScrollView:addCell(cell)
                local posx = ((j - 1) % ROW_COUNT) * 130
                local posy = (nowLine - 1) * 130
                cell:setPosition(ccp(posx, posy))
                panel.cell = cell
                table.insert(WaitRefreshList, panel)
                table.insert(itemList, panel)
                headIndex = headIndex + 1
            end
        end
        nowLine = nowLine - 1
    end
    -----------
    -- 當前頭像
    local parent = container:getVarNode("mHeadNode")
    local itemNode = ScriptContentBase:create("FormationTeamContent.ccbi")
    itemNode:setAnchorPoint(ccp(0.5, 0.5))
    parent:addChild(itemNode)
    nowHeadNode = itemNode
    local roleIcon = ConfigManager.getRoleIconCfg()
    local nowIcon = GameConfig.headIconNew or UserInfo.playerInfo.headIcon
    if not roleIcon[nowIcon] then
        local icon = common:getPlayeIcon(UserInfo.roleInfo.prof, nowIcon)
        NodeHelper:setSpriteImage(itemNode, { mHead = icon })
    else
        NodeHelper:setSpriteImage(itemNode, { mHead = roleIcon[nowIcon].MainPageIcon })
    end
    NodeHelper:setStringForLabel(itemNode, { mLv = UserInfo.roleInfo.level })
    NodeHelper:setNodesVisible(itemNode, { mSelectTxt = false, mSelectFrame = false })
    
    offsetY = 130 * lineCount
    local viewSize = container.mScrollView:getViewSize()
    local size = CCSizeMake(viewSize.width, offsetY)
    container.mScrollView:setContentSize(size)
    container.mScrollView:setTouchEnabled(lineCount > 2)
    container.mScrollView:setContentOffset(ccp(0, viewSize.height - size.height))
    container.mScrollView:forceRecaculateChildren()
    container.mScrollView:registerScriptHandler(self, 0)
end

function IllItemContent:onRefreshContent(ccbRoot)
    local container = ccbRoot:getCCBFileNode()
    self.container = container
    if self.data then
        local imgPath = roleTab[self.data.id].MainPageIcon
        if NodeHelper:isFileExist(imgPath) then
            NodeHelper:setSpriteImage(container, { mHead = imgPath })
        end
    end
    local isSelect = nowPlayerIcon == self.data.id

    NodeHelper:setNodesVisible(container, { mSelectTxt = isSelect,  mSelectFrame = isSelect, mLvNode = false, mRingSprite = false })
end

function IllItemContent:RefreshItem()
    if self.cell:isLoaded() then
        local container = self.cell:getCCBFileNode()
        if container then
            self:onRefreshContent(self.cell)
            return true
        end
    end
    return false
end

function IllItemContent:onHead(container)
    if self.data then
        nowPlayerIcon = self.data.id 
    end
    for i = 1, #itemList do
        itemList[i]:RefreshItem()
    end
    ChangePlayerIconPage:refreshTempHeadIcon(nowPlayerIcon)
end

function ChangePlayerIconPage:refreshUI(isSort, isChange)
    --刷新界面，
    local tmpData = nil
    if curSubPage == PAGE_TYPE.AVATAR then
        tmpData = roleTab
    end
    if isChange then
        local roleIcon = ConfigManager.getRoleIconCfg()
        local nowIcon = GameConfig.headIconNew or UserInfo.playerInfo.headIcon
        if not roleIcon[nowIcon] then
            local icon = common:getPlayeIcon(UserInfo.roleInfo.prof, nowIcon)
            NodeHelper:setSpriteImage(nowHeadNode, { mHead = icon })
        else
            NodeHelper:setSpriteImage(nowHeadNode, { mHead = roleIcon[nowIcon].MainPageIcon })
        end
    end
    PageManager.refreshPage("MainScenePage", "refreshIcon")
    PageManager.refreshPage("PlayerInfoPage", "refreshIcon")
    PageManager.refreshPage("EquipmentPage", "refreshIcon")
end

function ChangePlayerIconPage:refreshTempHeadIcon(headId)
    local roleIcon = ConfigManager.getRoleIconCfg()
    if not roleIcon[headId] then
        local icon = common:getPlayeIcon(UserInfo.roleInfo.prof, headId)
        NodeHelper:setSpriteImage(nowHeadNode, { mHead = icon })
    else
        NodeHelper:setSpriteImage(nowHeadNode, { mHead = roleIcon[headId].MainPageIcon })
    end
end

function ChangePlayerIconPage:onExecute(container)
    if changePageTemp and type(changePageTemp) == "function" then
        changePageTemp()
        changePageTemp = nil
    end

    if #WaitRefreshList > 0 then
        for i,v in ipairs(WaitRefreshList) do
            if v.cell:isLoaded() then
                if v:RefreshItem() then
                    table.remove(WaitRefreshList, i)
                end
                break
            end
        end
    end
end

function ChangePlayerIconPage:onExit(container)
    container.mScrollView:removeAllCell()
    curSubPage = PAGE_TYPE.AVATAR
    self:removePacket(container)
    onUnload(thisPageName, container)
end

function ChangePlayerIconPage:onClose()
    PageManager.popPage(thisPageName)
end

function ChangePlayerIconPage:onReceiveMessage(container)

end

function ChangePlayerIconPage:onReceivePacket(container)
    local opcode = container:getRecPacketOpcode()
    local msgBuff = container:getRecPacketBuffer()
    if opcode == HP_pb.MAINROLE_ICON_CHANGE_S then
        local msg = HeadIcon_pb.PlayerHeadIconChangeRep()
        msg:ParseFromString(msgBuff)
        if msg.status == 1 then
            MessageBoxPage:Msg_Box_Lan(common:getLanguageString("@PFPChange"))
            local UserInfo = require("PlayerInfo.UserInfo")
            UserInfo.playerInfo.headIcon = msg.changeIcon
            nowPlayerIcon = msg.changeIcon
            GameConfig.headIconNew = msg.changeIcon

            self:refreshUI(false, true)
        end
    end
end

local CommonPage = require("CommonPage")
ChangePlayerIconPage = CommonPage.newSub(ChangePlayerIconPage, thisPageName, option)

return ChangePlayerIconPage