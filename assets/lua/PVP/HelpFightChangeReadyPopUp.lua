---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/3/16 15:54
---
local HelpFightChangeReadyPopUp = {
    isShowText = false
}

local thisPageName = "HelpFightChangeReadyPopUp"
local textNode = nil
local bg = nil
local spriteNode = nil
local HelpFightDataManager = require("PVP.HelpFightDataManager")
local EighteenPrinces_pb = require("EighteenPrinces_pb")
local UserMercenaryManager = require("UserMercenaryManager")
local option = {
    ccbiFile = "HelpFightChangeReadyPopUp.ccbi",
    handlerMap = {
        onClose = "onClose",
        onChange = "onChange",
        onLineup = "onLineup", -- 布阵
        onUseItem = "onUseItem",
        onChallenge = "onChallenge",
    },
    opcodes = {
        EIGHTEENPRINCES_FORMATIONINFO_S = HP_pb.EIGHTEENPRINCES_FORMATIONINFO_S,
        --EIGHTEENPRINCES_CHALLENGE_S = HP_pb.EIGHTEENPRINCES_CHALLENGE_S,
    },
}
local myServerData = nil
local myMedicalItemCount = 0
local  mRoleCfg = ConfigManager.getRoleCfg();
local HeadItem = {
    ccbiFile = "HelpFightHeadItem.ccbi"
}

function HeadItem:onRefreshContent(content)
    local container = content:getCCBFileNode()
    if container == nil then
        return
    end
    local playerNode = container:getVarNode("mPlayerSprite")
    playerNode:removeAllChildren();
    local index = self.id
    local info = myServerData.roleItem[index]
    local itemCfg = nil
    if info then
        itemCfg = mRoleCfg[info.itemId];
    end
    if itemCfg then
        local imageMap = {
            mProtraitColour = GameConfig.MercenaryQualityImage[itemCfg.quality] ,
        }
        local playerSprite = CCSprite:create(itemCfg.icon);
        playerNode:addChild(playerSprite);
        if  info.itemId<= 6 then
            playerSprite:setScale(0.77)
            NodeHelper:setStringForLabel(container, { mMercenaryName = UserInfo.roleName });
            imageMap.mProtraitColour = GameConfig.QualityImage[1]
            NodeHelper:setSpriteImage(container,imageMap)
        else
            playerSprite:setScale(1)
            NodeHelper:setStringForLabel(container, { mMercenaryName = itemCfg.name });
            NodeHelper:setSpriteImage(container,imageMap)
        end
        local bSkin = false
        local FashionInfos = itemCfg.FashionInfos;
        if itemCfg.modelId ~= 0 then
            FashionInfos = mRoleCfg[itemCfg.modelId].FashionInfos;
        end
        if FashionInfos then
            for i, v in ipairs(FashionInfos) do
                local statusInfo = UserMercenaryManager:getMercenaryStatusByItemId(v);
                if statusInfo and v ~= info.itemId then
                    bSkin =(statusInfo.costSoulCount == statusInfo.soulCount and statusInfo.roleStage == 1);
                    break;
                end
            end
        end
        NodeHelper:setNodesVisible(container, { mChooseNumNode = false, mChoosePositionNum = false, mFishionIcon = bSkin, mMercenaryName = true, mReplaceIcon = (index > 6), mBattleIcon = (index <= 6 and index > 0),mMercenaryLock = false  });
        local mHpSprite = container:getVarNode("mHpSprite")
        mHpSprite:setScaleX(info.hp/100)
        if info.hp == 0 then
            NodeHelper:setNodesVisible(container, { mIsGrayNode = true })
        else
            NodeHelper:setNodesVisible(container, { mIsGrayNode = false })
        end
    end

    local showContent = {
        mMercenaryOnTeam = false ,
        mChoosePositionNum = false,
        mChooseNumNode = false ,
    }
    NodeHelper:setNodesVisible(container,showContent)
end

function HelpFightChangeReadyPopUp:onLoad(container)
    container:loadCcbiFile(option.ccbiFile)

end
function HelpFightChangeReadyPopUp:onEnter(container)
    container:registerMessage(MSG_MAINFRAME_REFRESH)
    self:registerPacket(container)
    container.mScrollView = container:getVarScrollView("mContent")
    self:onInitUI(container)
    --self:refreshPage(container)
    HelpFightDataManager:sendEighteenPrincesFormationInfoReq()
end

function HelpFightChangeReadyPopUp:onInitUI(container)
    local libStr = {}
    libStr.mTitle = common:getLanguageString("@Eighteentitle8")
    libStr.mLeftTitle = common:getLanguageString("@Eighteentitle7")
    libStr.mRightTitle = common:getLanguageString("@Eighteentitle6")
    libStr.mLeftBtn = common:getLanguageString("@Replacement")
    libStr.mRightBtn = common:getLanguageString("@OrgTeamTitle")
    libStr.mUseBtn = common:getLanguageString("@Eighteenbtn6")
    libStr.mChallengeBtn = common:getLanguageString("@Eighteenbtn5")
    HelpFightDataManager.myMedicalItem = HelpFightDataManager.myMedicalItem or {}
    local count = 0
    for i = 1, #HelpFightDataManager.myMedicalItem do
        count = count +  HelpFightDataManager.myMedicalItem[i].count
    end
    myMedicalItemCount = count
    libStr.mUseItemCount = "x"..count
    NodeHelper:setStringForLabel(container,libStr)
    self:refreshLeftContent(container)
    self:isShowBtn(container,false)
end


function HelpFightChangeReadyPopUp:registerPacket(container)
    for key, opcode in pairs(option.opcodes) do
        if string.sub(key, -1) == "S" then
            container:registerPacket(opcode)
        end
    end
end

function HelpFightChangeReadyPopUp:removePacket(container)
    for key, opcode in pairs(option.opcodes) do
        if string.sub(key, -1) == "S" then
            container:removePacket(opcode)
        end
    end
end

function HelpFightChangeReadyPopUp:isShowBtn(container,isShowBtn)
    NodeHelper:setNodesVisible(container,{mSelectBtn = isShowBtn,mFormationBtn =isShowBtn,mImmediatelyBtn = isShowBtn,mFastSweepNode = isShowBtn })
end

function HelpFightChangeReadyPopUp:refreshPage(container)
    self:refreshLeftContent(container)
    self:isShowBtn(container,true)
    self:rebuildAllItem(container)
end

function HelpFightChangeReadyPopUp:refreshLeftContent(container)
    local leftRoleInfo = nil
    if myServerData then
        if myServerData.helpItem[1] then
            leftRoleInfo = myServerData.helpItem[1]
            local roleConfig = ConfigManager.getRoleCfg()
            NodeHelper:setStringForLabel(container,{mLeftPlayerName = common:getLanguageString("@Eighteenbtncontent10",leftRoleInfo.playerName,roleConfig[leftRoleInfo.itemId].name) })
            local  icon ,frame = common:getPlayeIcon(0,leftRoleInfo.itemId)
            NodeHelper:setSpriteImage(container,{mPic = icon},{mPic = 0.77})
            NodeHelper:setQualityFrames(container, {mHand = roleConfig[leftRoleInfo.itemId].quality})
            local mHpSprite = container:getVarNode("mHpSprite")
            NodeHelper:setNodesVisible(container,{mHpNode = true})
            local remainHp = 0.00
            remainHp = myServerData.helpItem[1].hp
            mHpSprite:setScaleX(remainHp/100)
            NodeHelper:setNodesVisible(container,{mFishionIcon = false})
            if remainHp == 0 then
                NodeHelper:setNodeIsGray(container, { mIsGrayNode = true })
            else
                NodeHelper:setNodeIsGray(container, { mIsGrayNode = false })
            end
        else
            NodeHelper:setStringForLabel(container,{mLeftPlayerName = "",mMercenaryName = ""})
            NodeHelper:setNodesVisible(container,{mHpNode = false,mFishionIcon = false,mIsGrayNode = false})
        end
    else
        NodeHelper:setStringForLabel(container,{mLeftPlayerName = "",mMercenaryName = ""})
        NodeHelper:setNodesVisible(container,{mHpNode = false,mFishionIcon = false,mIsGrayNode = false})
    end
end

function HelpFightChangeReadyPopUp:rebuildAllItem(container)
    container.mScrollView:removeAllCell()
    myServerData = myServerData or {}
    local count = #myServerData.roleItem
    if count >= 0 then
        NodeHelper:buildCellScrollView(container.mScrollView,count, HeadItem.ccbiFile, HeadItem);
    end
    if count <= 6 then
        container.mScrollView:setTouchEnabled(false)
    else
        container.mScrollView:setTouchEnabled(true)
    end
end

function HelpFightChangeReadyPopUp:onClose(container)
    PageManager.popPage(thisPageName)
end

--变更
function HelpFightChangeReadyPopUp:onChange(container)
    PageManager.popPage(thisPageName)
     HelpFightDataManager.isJumpSelectRolePage = true
    PageManager.pushPage("HelpFightSelectRolePopUp")
end

--布阵
function HelpFightChangeReadyPopUp:onLineup(container)
    PageManager.popPage(thisPageName)
    PageManager.pushPage("HelpFightSelectMercenaryTeamPopUp")
end

--使用物品
function HelpFightChangeReadyPopUp:onUseItem(container)
    if myMedicalItemCount == 0 then
        MessageBoxPage:Msg_Box_Lan( common:getLanguageString("@Eighteentip6" ))
    else
        PageManager.popPage(thisPageName)
        PageManager.pushPage("HelpFightUseItemPopUp")
    end
end

--挑战
function HelpFightChangeReadyPopUp:onChallenge(container)
    local isCanChallenge = false

    for i = 1, #myServerData.roleItem do
        if myServerData.roleItem[i].hp >0 then
            isCanChallenge = true
            break
        end
    end
    if isCanChallenge == false then
        for i = 1, #myServerData.helpItem do

        end
        if myServerData.helpItem and myServerData.helpItem[1] and myServerData.helpItem[1].hp > 0 then
            isCanChallenge = true
        end
    end

    if isCanChallenge then
        HelpFightDataManager.LayerInfo = HelpFightDataManager.LayerInfo or {}
        HelpFightDataManager.LayerInfo.layerId = HelpFightDataManager.LayerInfo.layerId or 0
        HelpFightDataManager:sendEighteenPrincesChallengeReq(HelpFightDataManager.LayerInfo.layerId)
    else
        MessageBoxPage:Msg_Box_Lan( common:getLanguageString("@Eighteentip8" ))
    end


end


function HelpFightChangeReadyPopUp:onExecute(container)

end

function HelpFightChangeReadyPopUp:onExit(container)
    myServerData = nil
end
function HelpFightChangeReadyPopUp:onReceiveMessage(container)

end
function HelpFightChangeReadyPopUp:onReceivePacket(container)
    local opcode = container:getRecPacketOpcode()
    local msgBuff = container:getRecPacketBuffer()
    if opcode == HP_pb.EIGHTEENPRINCES_FORMATIONINFO_S then
        local msg = EighteenPrinces_pb.HPEighteenPrincesFormationInfoRet()
        msg:ParseFromString(msgBuff)
        myServerData =  HelpFightDataManager:EighteenPrincesFormationInfoFun(msg)
        self:refreshPage(container)
--[[    elseif opcode == HP_pb.EIGHTEENPRINCES_CHALLENGE_S then
        local msg = EighteenPrinces_pb.EighteenPrincesChallengeRet()
        msg:ParseFromString(msgBuff)
        local  myChallengeData = HelpFightDataManager:EighteenPrincesChallengeFun(msg)
        HelpFightDataManager.LayerInfo.layerId = myChallengeData.curLayer
        HelpFightDataManager.isChallenge = true
        PageManager.viewBattlePage(myChallengeData.battleInfo)]]
    end
end
local CommonPage = require('CommonPage')
HelpFightChangeReadyPopUp= CommonPage.newSub(HelpFightChangeReadyPopUp, thisPageName, option)

return HelpFightChangeReadyPopUp