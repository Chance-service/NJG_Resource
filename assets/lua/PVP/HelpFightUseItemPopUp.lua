---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/3/16 15:54
---
local HelpFightUseItemPopUp = {
    isShowText = false
}

local thisPageName = "HelpFightUseItemPopUp"
local textNode = nil
local bg = nil
local spriteNode = nil
local ItemManager = require("Item.ItemManager");
local UserItemManager = require("Item.UserItemManager");
local ItemOprHelper = require("Item.ItemOprHelper");
local HelpFightDataManager = require("PVP.HelpFightDataManager")
local EighteenPrinces_pb = require("EighteenPrinces_pb")
local thisItemId = 0
local _itemCount = 1    -- 用户的道具数量
local _currenCount = 1 -- 当前数量
local _multiple = 1
local  myContain = nil
local option = {
    ccbiFile = "SuitExchangePage_100_New_1.ccbi",
    handlerMap = {
        onClose = "onClose",
        onUseClick = "onUseClick",

        -----------------------------------
        onAdd = "onIncrease",
        onAddTen = "onIncreaseTen",
        onReduction = "onDecrease",
        onReductionTen = "onDecreaseTen",
    },
    opcodes = {
    },
}
local mItemObj = { }
local mCurrentSelect = 0
local mCurrentItemId = 0
local mItemInfo = nil


local Item = {
    ccbiFile = "SuitExchangePage_100Item.ccbi"
}
function Item:new(o)
    o = o or { }
    setmetatable(o, self)
    self.__index = self
    return o
end

function Item:onOpenClick()

end

function Item:onHand(container)
    if self.data then
        GameUtil:showTip(self.container:getVarNode('mIconSprite'), self.data)
    end
end

function Item:onSelect(container)
    HelpFightUseItemPopUp.onSelect(self.id, self.data.itemId)
end

function Item:onRefreshContent(ccbRoot)
    local container = ccbRoot:getCCBFileNode()
    self.container = container
    self:setSelectState(mCurrentSelect)
    local itemInfo = ResManagerForLua:getResInfoByTypeAndId(self.data.type, self.data.itemId, self.data.count)
    local sprite2Img = { }
    local scaleMap = { }
    local menu2Quality = { }
    local lb2Str = { }
    local visibleMap = { }
    local colorMap = { }

    if itemInfo then
        sprite2Img["mIconSprite"] = itemInfo.icon
        sprite2Img["mBgSprite"] = NodeHelper:getImageBgByQuality(itemInfo.quality)
        menu2Quality["mQuality"] = itemInfo.quality
        colorMap["mNameLabel"] = ConfigManager.getQualityColor()[itemInfo.quality].textColor
        lb2Str["mNameLabel"] = common:stringAutoReturn(itemInfo.name, 4)
        lb2Str["mCountLabel"] = self.data.count
    end

    NodeHelper:setNodesVisible(self.container, visibleMap)
    NodeHelper:setStringForLabel(self.container, lb2Str)
    NodeHelper:setSpriteImage(self.container, sprite2Img, scaleMap)
    NodeHelper:setQualityFrames(self.container, menu2Quality)
    NodeHelper:setColorForLabel(self.container, colorMap)
end

function Item:setSelectState(currentId)
    local isSelect = false
    if currentId == self.id then
        isSelect = true
    end
    NodeHelper:setNodesVisible(self.container, { mSelectSprite = isSelect })
    NodeHelper:setMenuItemEnabled(self.container, "mSelectBtn", not isSelect)
end

function HelpFightUseItemPopUp.onSelect(id, itemId)
    mCurrentSelect = id
    mCurrentItemId = itemId
    _itemCount = mItemInfo[id].count
    if _itemCount > 0 then
        _currenCount = 1
    else
        _currenCount = 0
    end
    HelpFightUseItemPopUp:refreshCount(myContain)
    for k, v in pairs(mItemObj) do
        v:setSelectState(mCurrentSelect)
    end
end


function HelpFightUseItemPopUp:onEnter(container)
    self.container = container
    myContain = container
    self:initUI(container)
    self:initData(container)
    NodeHelper:initScrollView(container, "mContent", 3)
    self:refreshPage(container)
    container:registerPacket(HP_pb.EIGHTEENPRINCES_USE_MEDICAL_S)

end

function HelpFightUseItemPopUp:initUI(container)
    local lb2Str = {
        mChoiceUseItem = common:getLanguageString(""),
        mTitle = common:getLanguageString("@Eighteentitle5"),
        mUseBtnContent = common:getLanguageString("@Eighteenbtn6")
    }
    NodeHelper:setStringForLabel(container, lb2Str)
end

function HelpFightUseItemPopUp:initData(container)
    mItemObj = { }
    mCurrentSelect = 0
    mCurrentItemId = 0
    _itemCount = 0
    _currenCount = 0
    mItemInfo = {
        [1] = {type = 10000,itemId = 1024 ,count = 0,severType = 3 },
        [2] = {type = 10000,itemId = 1023 ,count = 0,severType = 2 },
        [3] = {type = 10000,itemId = 1022 ,count = 0 ,severType = 1},
    }
    self:refreshItemCount(container)
end

function HelpFightUseItemPopUp:refreshItemCount(container)
    if  HelpFightDataManager.myMedicalItem then
        for i = 1, #HelpFightDataManager.myMedicalItem do
            for j = 1, #mItemInfo do
                if HelpFightDataManager.myMedicalItem[i].type  == mItemInfo[j].itemId then
                    mItemInfo[j].count = HelpFightDataManager.myMedicalItem[i].count
                    break
                end
            end
        end
    end
end

function HelpFightUseItemPopUp:refreshPage(container)
    self:clearAndReBuildAllItem(container)
    self:refreshCount(container)

end

function HelpFightUseItemPopUp:onUseClick()
    if mCurrentSelect <= 0 then
        -- 用一个提示么？
        MessageBoxPage:Msg_Box_Lan("@SuitExchangeTex")
        return
    end
    if mCurrentItemId <= 0 then
        return
    end
    if _currenCount <= 0 then
        return
    end

    HelpFightDataManager:sendEighteenPrincesUseMedicalReq(mItemInfo[mCurrentSelect].severType,_currenCount)
--[[    PageManager.popPage(thisPageName)
    PageManager.pushPage("HelpFightChangeReadyPopUp")]]
end

function HelpFightUseItemPopUp:onIncrease(container)
    if mCurrentSelect <= 0 then
        -- 用一个提示么？
        MessageBoxPage:Msg_Box_Lan("@SuitExchangeTex")
        return
    end
    if _currenCount == _itemCount then
        MessageBoxPage:Msg_Box_Lan("@NotEnoughExchangeItem")
        return
    end
    _currenCount = _currenCount + 1 * _multiple
    self:refreshCount(container)
end

function HelpFightUseItemPopUp:onIncreaseTen(container)
    if mCurrentSelect <= 0 then
        -- 用一个提示么？
        MessageBoxPage:Msg_Box_Lan("@SuitExchangeTex")
        return
    end
    if _currenCount >(_itemCount - 10 * _multiple) then
        _currenCount = _itemCount
        MessageBoxPage:Msg_Box_Lan("@NotEnoughExchangeItem")
    elseif _currenCount == 1 then
        _currenCount = 10 * _multiple
    else
        _currenCount = _currenCount + 10 * _multiple
    end
    self:refreshCount(container)
end

function HelpFightUseItemPopUp:onDecrease(container)
    if mCurrentSelect <= 0 then
        -- 用一个提示么？
        MessageBoxPage:Msg_Box_Lan("@SuitExchangeTex")
        return
    end
    if _currenCount <= 1 then
        return
    end
    _currenCount = _currenCount - 1 * _multiple
    self:refreshCount(container)
end

function HelpFightUseItemPopUp:onDecreaseTen(container)
    if mCurrentSelect <= 0 then
        -- 用一个提示么？
        MessageBoxPage:Msg_Box_Lan("@SuitExchangeTex")
        return
    end
    if _currenCount < 10 * _multiple then
        _currenCount = 1 * _multiple
    else
        _currenCount = _currenCount - 10 * _multiple
    end
    if _currenCount == 1 then
        _currenCount = 0
    end
    self:refreshCount(container)
end

function HelpFightUseItemPopUp:refreshCount(container)
    NodeHelper:setStringForLabel(container, { mAddNum = _currenCount })
end

function HelpFightUseItemPopUp:clearAndReBuildAllItem(container)
    container.mScrollView:removeAllCell()
    mItemObj = { }
    if mItemInfo == nil then
        return
    end
    local data = mItemInfo
    -- local data = common:split(mItemInfo.containItem, ",")
    for i = 1, #data do
        local titleCell = CCBFileCell:create()
        local panel = Item:new( { id = i, data = data[i] })
        titleCell:registerFunctionHandler(panel)
        titleCell:setCCBFile(Item.ccbiFile)
        container.mScrollView:addCellBack(titleCell)
        mItemObj[i] = panel
    end
    container.mScrollView:orderCCBFileCells()
end

function HelpFightUseItemPopUp:onClose(container)
    PageManager.popPage(thisPageName)
    PageManager.pushPage("HelpFightChangeReadyPopUp")
end


function HelpFightUseItemPopUp:onExecute(container)

end

function HelpFightUseItemPopUp:onExit(container)
    mItemInfo = nil
    container:removePacket(HP_pb.EIGHTEENPRINCES_USE_MEDICAL_S);
end
function HelpFightUseItemPopUp:onReceiveMessage(container)

end
function HelpFightUseItemPopUp:onReceivePacket(container)
    local opcode = container:getRecPacketOpcode();
    local msgBuff = container:getRecPacketBuffer();
    if opcode == HP_pb.EIGHTEENPRINCES_USE_MEDICAL_S then
        -- SuitExchangePage_100Base:refreshPage(container);
        MessageBoxPage:Msg_Box_Lan( common:getLanguageString("@Eighteentip9" ))
        self:refreshItemCount(container)
        self:refreshPage(container)

    end
end
local CommonPage = require('CommonPage')
HelpFightUseItemPopUp= CommonPage.newSub(HelpFightUseItemPopUp, thisPageName, option)
